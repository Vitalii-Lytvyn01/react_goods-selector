{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addGood","addedGood","setState","prevState","removeGood","removedGood","filter","good","resultingString","this","length","slice","join","className","map","isSelected","includes","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,QAAU,SAACC,GACT,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,S,EAIhDG,WAAa,SAACC,GACZ,EAAKH,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,cAAeI,EAAUJ,cAAcO,QAAO,SAACC,GAAD,OAAUA,IAASF,U,4CAIrE,WAAU,IAAD,OACHG,EAAkB,GAEdT,EAAkBU,KAAKX,MAAvBC,cAER,OAAQA,EAAcW,QACpB,KAAK,EACHF,EAAkB,oBAClB,MACF,KAAK,EACHA,EAAe,UAAMT,EAAc,GAApB,gBACf,MACF,QACES,EAAkB,UAAGT,EAAcY,MAAM,EAAGZ,EAAcW,OAAS,GAAGE,KAAK,MAAzD,mBACXb,EAAcY,OAAO,GADV,iBAKtB,OACE,sBAAKE,UAAU,MAAf,UACE,6BACE,+BACGL,MAGL,oBAAIK,UAAU,YAAd,SAEIjB,EAAgBkB,KAAI,SAACP,GACnB,IAAMQ,EAAa,EAAKjB,MAAMC,cAAciB,SAAST,GAErD,OACE,qBAAIM,UAAU,kBAAd,UACE,oBAAIA,UAAU,OAAd,SACGN,IAGDQ,EAEI,wBACEE,KAAK,SACLJ,UAAU,wBACVK,QAAS,WACP,EAAKd,WAAWG,IAJpB,yBAWA,wBACEU,KAAK,SACLJ,UAAU,6BACVK,QAAS,WACP,EAAKlB,QAAQO,IAJjB,wBAlB6BA,e,GAhDnCY,IAAMC,WAuFTvB,ICzGfwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7b967cec.chunk.js","sourcesContent":["/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  addGood = (addedGood: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: [...prevState.selectedGoods, addedGood],\n    }));\n  };\n\n  removeGood = (removedGood: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: prevState.selectedGoods.filter((good) => good !== removedGood),\n    }));\n  };\n\n  render() {\n    let resultingString = '';\n\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        resultingString = 'No goods selected';\n        break;\n      case 1:\n        resultingString = `${selectedGoods[0]} is selected`;\n        break;\n      default:\n        resultingString = `${selectedGoods.slice(0, selectedGoods.length - 1).join(', ')} and `\n          + `${selectedGoods.slice(-1)} are selected`;\n        break;\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>\n          <span>\n            {resultingString}\n          </span>\n        </h1>\n        <ul className=\"goodsList\">\n          {\n            goodsFromServer.map((good) => {\n              const isSelected = this.state.selectedGoods.includes(good);\n\n              return (\n                <li className=\"goodsList__item\" key={good}>\n                  <h3 className=\"name\">\n                    {good}\n                  </h3>\n                  {\n                    isSelected\n                      ? (\n                        <button\n                          type=\"button\"\n                          className=\"item__button selected\"\n                          onClick={() => {\n                            this.removeGood(good);\n                          }}\n                        >\n                          Remove item\n                        </button>\n                      )\n                      : (\n                        <button\n                          type=\"button\"\n                          className=\"item__button selected--not\"\n                          onClick={() => {\n                            this.addGood(good);\n                          }}\n                        >\n                          Add item\n                        </button>\n                      )\n                  }\n                </li>\n              );\n            })\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}